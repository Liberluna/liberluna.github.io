---
import allTags from '../../datas/blog-tags.ts'
import TablerIcons from '../components/TablerIcons.astro'
import Layout from './Layout.astro'

const { frontmatter } = Astro.props

export interface Props {
  frontmatter: {
    title: string
    author: string
    avatar: string
    date: string
    update: string
    tags?: string
    thumbnail?: string
    desc: string
    memberID?: string
  }
}

const yyymmdd = (date: Date): string => {
  const y = date.getFullYear()
  const m = ('00' + (date.getMonth() + 1)).slice(-2)
  const d = ('00' + date.getDate()).slice(-2)
  return `${y}-${m}-${d}`
}

const tags = frontmatter.tags ? frontmatter.tags : []
const avatars = import.meta.glob('../../assets/avatars/*', { import: 'default' })
const avatar = await avatars[`../../assets/avatars/${frontmatter.avatar}`]()

const censorText = (text: string, keyword: string): string => {
  const r = new RegExp(keyword, 'gi')
  return text.replace(r, '***')
}
// テスト機能
const censoredSlot = censorText(slot, 'CVE')

<Layout title={`${frontmatter.title} | Liberluna Blog`} image={frontmatter.thumbnail}　description={frontmatter.desc}>
  <div class="lg:mx-20 mx-10">
    <div class="text-2xl">{frontmatter.title}</div>
    <div>
      <div class="flex items-center">
        <div class="avatar">
          <div class="w-10 rounded-full">
            <img src={avatar} />
          </div>
        </div>
        <div class="text-xl">
          {frontmatter.memberID ? (
            <a class="link" href={`/members/member/${frontmatter.memberID}`}>
              {frontmatter.author}
            </a>
          ) : (
            frontmatter.author
          )}
        </div>
      </div>
      <div>
        <div class="flex">
          <div class="flex">
            <div>
              <TablerIcons icon="calendar-event" />
            </div>
            <div>{yyymmdd(new Date(frontmatter.date))}</div>
          </div>
          <div class="flex">
            <div>
              <TablerIcons icon="reload" />
            </div>
            <div>{yyymmdd(new Date(frontmatter.update))}</div>
          </div>
        </div>
        <div class="flex">
          <div>Tags:</div>
          <div class="flex flex-wrap">
            {tags.map(tag => (
              <div class="mx-2">
                <a class="link" href={`/blog/tag/${tag}`}>
                  {allTags[tag]}
                </a>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
    <hr />
    <div class="markdown">
      {censoredSlot}
    </div>
  </div>
</Layout>

<style is:global>
  .markdown h1 {
    font-size: 2em !important;
  }
  .markdown h2 {
    font-size: 1.5em !important;
  }
  .markdown h3 {
    font-size: 1.17em !important;
  }
  .markdown h4 {
    font-size: 1.00em !important;
  }
  .markdown h5 {
    font-size: 0.83em !important;
  }
  .markdown h6 {
    font-size: 0.67em !important;
  }
  .markdown ul{
    list-style-type: disc !important;
    margin-left: 1em !important;
  }
  .markdown p{
    margin: 1em 0 !important;
  }
  .markdown a{
    color: #2779F6 !important;
    text-decoration: underline !important;
  }
</style>
